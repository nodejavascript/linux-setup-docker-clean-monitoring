version: '3.3'

services:

  portainer:
    image: portainer/portainer:1.24.1
    container_name: portainer
    restart: always
    networks:
    - web
    ports:
    - '9000:9000'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - portainer_data:/data

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: always
    networks:
      - web
    ports:
      - '3001:3001'
    volumes:
      - uptime-kuma-storage:/app/data

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  traefik:
    image: traefik:1.7
    container_name: traefik
    restart: always
    networks:
      - web
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    networks:
      - web
    ports:
      - '3306:3306'
    volumes:
      - mysql_dvsdb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  ghost_byblog:
    image: ghost:4.48.2
    container_name: ghost_byblog
    restart: always
    volumes:
      - ./ghost_byblog_content:/var/lib/ghost/content
      - ./ghost_byblog_config.production.json:/var/lib/ghost/config.production.json
    networks:
     - web
    environment:
      NODE_ENV: ${NODE_ENV}
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: ${GHOST_DATABASE_HOST}
      database__connection__user: ${GHOST_DATABASE_USER}
      database__connection__database: ${GHOST_DATABASE_NAME}
      database__connection__password: ${GHOST_DATABASE_PASSWORD}
    labels:
      - traefik.frontend.rule=Host:myblog.com
      - traefik.enable=true
      - traefik.port=2368
      - traefik.tags=public
      - traefik.docker.network=web
      - traefik.redirectorservice.frontend.entryPoints=http
      - traefik.redirectorservice.frontend.redirect.entryPoint=https
      - traefik.webservice.frontend.entryPoints=https
    links:
      - mysql

  redis:
    image: redis
    container_name: redis
    restart: always
    networks:
      - web
    ports:
      - 6379:6379
    volumes:
     - redis-data:/var/lib/redis
     - ./redis.conf:/usr/local/etc/redis/redis.conf
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
     - web
    ports:
      - 27017:27017
    volumes:
     - mongodb_data:/data/db
     - mongodb_config:/data/configdb
    environment:
     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    hostname: mongo

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    networks:
      - web
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8183:80
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node--exporter
    ports:
      - 9100:9100
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

  mqtt-exporter:
    image: kpetrem/mqtt-exporter
    container_name: mqtt-exporter
    ports:
      - 9001:9000
    environment:
      - MQTT_ADDRESS=${MQTT_ADDRESS}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - PROMETHEUS_PREFIX=${PROMETHEUS_PREFIX}
      - LOG_LEVEL=INFO
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    ports:
      - 3050:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: always

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rediscommander
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${HTTP_USER}
      HTTP_PASSWORD: ${HTTP_PASSWORD}
    ports:
      - 8081:8081
    networks:
      - web
    restart: "no"

volumes:
  portainer_data: {}
  mysql_dvsdb:
  redis-data:
  grafana-storage:
  mongodb_data:
  mongodb_config:
  uptime-kuma-storage:

networks:
  web:
    external: true
